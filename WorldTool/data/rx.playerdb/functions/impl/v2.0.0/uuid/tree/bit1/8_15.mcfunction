# source: rx.playerdb:impl/v2.0.0/uuid/tree/bit1/8_15
execute if score $bit rx.temp matches 8 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 8b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 8b}}].bits.select set value 1b
execute if score $bit rx.temp matches 9 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 9b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 9b}}].bits.select set value 1b
execute if score $bit rx.temp matches 10 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 10b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 10b}}].bits.select set value 1b
execute if score $bit rx.temp matches 11 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 11b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 11b}}].bits.select set value 1b
execute if score $bit rx.temp matches 12 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 12b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 12b}}].bits.select set value 1b
execute if score $bit rx.temp matches 13 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 13b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 13b}}].bits.select set value 1b
execute if score $bit rx.temp matches 14 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 14b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 14b}}].bits.select set value 1b
execute if score $bit rx.temp matches 15 if data storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 15b}}] store result score $size rx.temp run data modify storage rx.playerdb:main uuid[{selected: 1b, bits: {b1: 15b}}].bits.select set value 1b
